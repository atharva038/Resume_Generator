// Job profiles with required skills and weights
export const JOB_PROFILES = {
  "software-engineer": {
    label: "Software Engineer",
    category: "Engineering",
    requiredSkills: {
      programming: [
        "JavaScript",
        "Python",
        "Java",
        "C++",
        "TypeScript",
        "Go",
        "Rust",
      ],
      frameworks: [
        "React",
        "Node.js",
        "Angular",
        "Vue",
        "Django",
        "Spring Boot",
        "Express",
      ],
      databases: ["MongoDB", "PostgreSQL", "MySQL", "Redis", "DynamoDB"],
      tools: ["Git", "Docker", "Kubernetes", "CI/CD", "AWS", "Azure", "GCP"],
      concepts: [
        "Data Structures",
        "Algorithms",
        "System Design",
        "REST API",
        "Microservices",
      ],
    },
    weights: {
      technical: 0.4,
      experience: 0.3,
      projects: 0.2,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "built",
      "implemented",
      "designed",
      "optimized",
      "scaled",
      "architected",
    ],
    minExperience: 0,
  },
  "frontend-developer": {
    label: "Frontend Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["JavaScript", "TypeScript", "HTML", "CSS"],
      frameworks: [
        "React",
        "Vue",
        "Angular",
        "Next.js",
        "Svelte",
        "Tailwind CSS",
        "Bootstrap",
      ],
      tools: ["Webpack", "Vite", "Git", "Figma", "Chrome DevTools"],
      concepts: [
        "Responsive Design",
        "Accessibility",
        "Performance Optimization",
        "State Management",
        "SEO",
      ],
    },
    weights: {
      technical: 0.45,
      experience: 0.25,
      projects: 0.2,
      education: 0.1,
    },
    experienceKeywords: [
      "built",
      "designed",
      "implemented",
      "styled",
      "optimized",
      "created UI/UX",
    ],
    minExperience: 0,
  },
  "react-developer": {
    label: "React Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["JavaScript", "TypeScript", "HTML", "CSS"],
      frameworks: [
        "React",
        "Redux",
        "Redux Toolkit",
        "React Router",
        "Next.js",
        "React Query",
        "Styled Components",
      ],
      databases: [],
      tools: ["Webpack", "Vite", "Git", "npm", "Jest", "React Testing Library"],
      concepts: [
        "Hooks",
        "Component Lifecycle",
        "State Management",
        "Virtual DOM",
        "Performance Optimization",
        "Server-Side Rendering",
      ],
    },
    weights: {
      technical: 0.45,
      experience: 0.25,
      projects: 0.2,
      education: 0.1,
    },
    experienceKeywords: [
      "built",
      "developed",
      "implemented",
      "optimized",
      "created components",
      "managed state",
    ],
    minExperience: 0,
  },
  "angular-developer": {
    label: "Angular Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["TypeScript", "JavaScript", "HTML", "CSS"],
      frameworks: ["Angular", "RxJS", "NgRx", "Angular Material", "PrimeNG"],
      databases: [],
      tools: ["Angular CLI", "Git", "npm", "Jasmine", "Karma", "Webpack"],
      concepts: [
        "Dependency Injection",
        "Observables",
        "Services",
        "Directives",
        "Pipes",
        "Reactive Forms",
      ],
    },
    weights: {
      technical: 0.45,
      experience: 0.25,
      projects: 0.2,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "built",
      "implemented",
      "designed",
      "optimized",
      "created modules",
    ],
    minExperience: 0,
  },
  "vue-developer": {
    label: "Vue.js Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["JavaScript", "TypeScript", "HTML", "CSS"],
      frameworks: ["Vue", "Vuex", "Pinia", "Vue Router", "Nuxt.js", "Vuetify"],
      databases: [],
      tools: ["Vite", "Git", "npm", "Vue DevTools", "Jest"],
      concepts: [
        "Composition API",
        "Reactivity",
        "State Management",
        "Component Design",
        "Performance",
        "SSR",
      ],
    },
    weights: {
      technical: 0.45,
      experience: 0.25,
      projects: 0.2,
      education: 0.1,
    },
    experienceKeywords: [
      "built",
      "developed",
      "implemented",
      "designed",
      "optimized",
      "created components",
    ],
    minExperience: 0,
  },
  "backend-developer": {
    label: "Backend Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["Python", "Java", "Node.js", "Go", "C#", "PHP", "Ruby"],
      frameworks: [
        "Express",
        "Django",
        "Spring Boot",
        "FastAPI",
        "Flask",
        ".NET",
      ],
      databases: ["PostgreSQL", "MongoDB", "MySQL", "Redis", "Elasticsearch"],
      tools: ["Docker", "Kubernetes", "AWS", "Azure", "Git", "Jenkins"],
      concepts: [
        "REST API",
        "GraphQL",
        "Microservices",
        "Database Design",
        "Authentication",
        "Caching",
      ],
    },
    weights: {
      technical: 0.4,
      experience: 0.3,
      projects: 0.2,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "built",
      "designed",
      "optimized",
      "scaled",
      "implemented APIs",
    ],
    minExperience: 0,
  },
  "mean-stack-developer": {
    label: "MEAN Stack Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["JavaScript", "TypeScript"],
      frameworks: [
        "MongoDB",
        "Express.js",
        "Angular",
        "Node.js",
        "RxJS",
        "Mongoose",
      ],
      databases: ["MongoDB", "Redis"],
      tools: ["Git", "Docker", "npm", "Angular CLI", "Postman"],
      concepts: [
        "REST API",
        "JWT Authentication",
        "Observables",
        "Dependency Injection",
        "CRUD Operations",
      ],
    },
    weights: {
      technical: 0.4,
      experience: 0.3,
      projects: 0.2,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "built full-stack",
      "implemented",
      "integrated",
      "deployed MEAN",
    ],
    minExperience: 0,
  },
  "nodejs-backend-developer": {
    label: "Node.js Backend Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["JavaScript", "TypeScript"],
      frameworks: ["Express.js", "NestJS", "Fastify", "Koa", "Socket.io"],
      databases: ["MongoDB", "PostgreSQL", "MySQL", "Redis"],
      tools: ["Docker", "Git", "npm", "PM2", "AWS", "Jenkins"],
      concepts: [
        "REST API",
        "Microservices",
        "Event-Driven Architecture",
        "Authentication",
        "WebSockets",
        "Async Programming",
      ],
    },
    weights: {
      technical: 0.45,
      experience: 0.3,
      projects: 0.15,
      education: 0.1,
    },
    experienceKeywords: [
      "developed APIs",
      "built backend",
      "implemented",
      "optimized performance",
      "scaled services",
    ],
    minExperience: 0,
  },
  "python-backend-developer": {
    label: "Python Backend Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["Python"],
      frameworks: [
        "Django",
        "Flask",
        "FastAPI",
        "SQLAlchemy",
        "Celery",
        "Django REST Framework",
      ],
      databases: ["PostgreSQL", "MySQL", "MongoDB", "Redis"],
      tools: ["Docker", "Git", "Pytest", "AWS", "Jenkins", "Gunicorn"],
      concepts: [
        "REST API",
        "ORM",
        "Async/Await",
        "Background Tasks",
        "Database Migrations",
        "API Design",
      ],
    },
    weights: {
      technical: 0.45,
      experience: 0.3,
      projects: 0.15,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "built APIs",
      "implemented",
      "optimized",
      "automated",
      "integrated",
    ],
    minExperience: 0,
  },
  "java-backend-developer": {
    label: "Java Backend Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["Java"],
      frameworks: [
        "Spring Boot",
        "Spring MVC",
        "Hibernate",
        "Spring Data JPA",
        "Spring Security",
      ],
      databases: ["PostgreSQL", "MySQL", "Oracle", "MongoDB"],
      tools: ["Maven", "Gradle", "Docker", "Jenkins", "Git", "IntelliJ IDEA"],
      concepts: [
        "REST API",
        "Microservices",
        "Dependency Injection",
        "Design Patterns",
        "JPA",
        "Spring Cloud",
      ],
    },
    weights: {
      technical: 0.45,
      experience: 0.3,
      projects: 0.15,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "implemented",
      "designed",
      "architected",
      "optimized",
      "integrated",
    ],
    minExperience: 0,
  },
  "dotnet-backend-developer": {
    label: ".NET Backend Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["C#", "VB.NET"],
      frameworks: [
        ".NET Core",
        "ASP.NET Core",
        "Entity Framework",
        "SignalR",
        "Web API",
      ],
      databases: ["SQL Server", "PostgreSQL", "MongoDB", "Azure SQL"],
      tools: ["Visual Studio", "Git", "Azure DevOps", "Docker", "NuGet"],
      concepts: [
        "REST API",
        "Dependency Injection",
        "LINQ",
        "Async/Await",
        "Middleware",
        "Authentication",
      ],
    },
    weights: {
      technical: 0.45,
      experience: 0.3,
      projects: 0.15,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "built",
      "implemented",
      "designed",
      "integrated",
      "deployed",
    ],
    minExperience: 0,
  },
  "php-backend-developer": {
    label: "PHP Backend Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["PHP"],
      frameworks: [
        "Laravel",
        "Symfony",
        "CodeIgniter",
        "Composer",
        "Eloquent ORM",
      ],
      databases: ["MySQL", "PostgreSQL", "MongoDB", "Redis"],
      tools: ["Git", "Docker", "Composer", "PHPUnit", "Apache", "Nginx"],
      concepts: [
        "REST API",
        "MVC Pattern",
        "Authentication",
        "Database Design",
        "Session Management",
        "Caching",
      ],
    },
    weights: {
      technical: 0.45,
      experience: 0.3,
      projects: 0.15,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "built",
      "implemented",
      "optimized",
      "integrated",
      "maintained",
    ],
    minExperience: 0,
  },
  "ruby-backend-developer": {
    label: "Ruby Backend Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["Ruby"],
      frameworks: ["Ruby on Rails", "Sinatra", "Active Record", "RSpec"],
      databases: ["PostgreSQL", "MySQL", "Redis", "MongoDB"],
      tools: ["Git", "Docker", "RubyGems", "Bundler", "Heroku"],
      concepts: [
        "REST API",
        "MVC Pattern",
        "Active Record",
        "Testing",
        "Convention over Configuration",
      ],
    },
    weights: {
      technical: 0.45,
      experience: 0.3,
      projects: 0.15,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "built",
      "implemented",
      "designed",
      "optimized",
      "maintained",
    ],
    minExperience: 0,
  },
  "go-backend-developer": {
    label: "Go Backend Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["Go", "Golang"],
      frameworks: ["Gin", "Echo", "Fiber", "GORM", "Chi"],
      databases: ["PostgreSQL", "MongoDB", "Redis", "MySQL"],
      tools: ["Docker", "Kubernetes", "Git", "gRPC", "Prometheus"],
      concepts: [
        "Concurrency",
        "Goroutines",
        "Microservices",
        "REST API",
        "gRPC",
        "Performance Optimization",
      ],
    },
    weights: {
      technical: 0.45,
      experience: 0.3,
      projects: 0.15,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "built",
      "implemented",
      "optimized",
      "scaled",
      "architected",
    ],
    minExperience: 0,
  },
  "fullstack-developer": {
    label: "Full Stack Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["JavaScript", "TypeScript", "Python", "Java"],
      frameworks: [
        "React",
        "Node.js",
        "Express",
        "Next.js",
        "Django",
        "Spring Boot",
      ],
      databases: ["MongoDB", "PostgreSQL", "MySQL", "Redis"],
      tools: ["Git", "Docker", "AWS", "CI/CD", "Webpack"],
      concepts: [
        "REST API",
        "Microservices",
        "State Management",
        "Database Design",
        "Authentication",
      ],
    },
    weights: {
      technical: 0.35,
      experience: 0.35,
      projects: 0.2,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "built",
      "designed",
      "implemented",
      "end-to-end",
      "full-stack",
    ],
    minExperience: 0,
  },
  "mern-stack-developer": {
    label: "MERN Stack Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["JavaScript", "TypeScript"],
      frameworks: [
        "MongoDB",
        "Express.js",
        "React",
        "Node.js",
        "Redux",
        "Next.js",
        "Mongoose",
        "JWT",
      ],
      databases: ["MongoDB", "Redis"],
      tools: ["Git", "Docker", "npm", "Webpack", "Postman", "VS Code"],
      concepts: [
        "REST API",
        "State Management",
        "Authentication",
        "CRUD Operations",
        "Responsive Design",
        "API Integration",
      ],
    },
    weights: {
      technical: 0.35,
      experience: 0.35,
      projects: 0.2,
      education: 0.1,
    },
    experienceKeywords: [
      "developed full-stack",
      "built MERN",
      "implemented end-to-end",
      "deployed",
      "integrated",
    ],
    minExperience: 0,
  },
  "python-fullstack-developer": {
    label: "Python Full Stack Developer (Django/Flask + React)",
    category: "Engineering",
    requiredSkills: {
      programming: ["Python", "JavaScript", "TypeScript"],
      frameworks: [
        "Django",
        "Flask",
        "React",
        "Django REST Framework",
        "Redux",
        "FastAPI",
      ],
      databases: ["PostgreSQL", "MySQL", "MongoDB", "Redis"],
      tools: ["Git", "Docker", "Pytest", "npm", "Webpack"],
      concepts: [
        "REST API",
        "ORM",
        "State Management",
        "Authentication",
        "Database Design",
        "Responsive Design",
      ],
    },
    weights: {
      technical: 0.35,
      experience: 0.35,
      projects: 0.2,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "built full-stack",
      "implemented",
      "integrated",
      "deployed Python",
    ],
    minExperience: 0,
  },
  "java-fullstack-developer": {
    label: "Java Full Stack Developer (Spring Boot + Angular/React)",
    category: "Engineering",
    requiredSkills: {
      programming: ["Java", "JavaScript", "TypeScript"],
      frameworks: [
        "Spring Boot",
        "Angular",
        "React",
        "Hibernate",
        "Spring Security",
        "Redux",
      ],
      databases: ["PostgreSQL", "MySQL", "MongoDB", "Oracle"],
      tools: ["Maven", "Git", "Docker", "Jenkins", "npm"],
      concepts: [
        "REST API",
        "Microservices",
        "State Management",
        "JPA",
        "Authentication",
        "Responsive Design",
      ],
    },
    weights: {
      technical: 0.35,
      experience: 0.35,
      projects: 0.2,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "built full-stack",
      "implemented",
      "integrated",
      "architected",
    ],
    minExperience: 0,
  },
  "lamp-stack-developer": {
    label: "LAMP Stack Developer (Linux, Apache, MySQL, PHP)",
    category: "Engineering",
    requiredSkills: {
      programming: ["PHP", "JavaScript", "HTML", "CSS"],
      frameworks: ["Laravel", "Symfony", "jQuery", "Bootstrap"],
      databases: ["MySQL", "PostgreSQL"],
      tools: ["Apache", "Linux", "Git", "Composer", "PHPMyAdmin"],
      concepts: [
        "MVC Pattern",
        "REST API",
        "Database Design",
        "Authentication",
        "Session Management",
      ],
    },
    weights: {
      technical: 0.35,
      experience: 0.35,
      projects: 0.2,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "built",
      "maintained",
      "deployed LAMP",
      "implemented",
    ],
    minExperience: 0,
  },
  "dotnet-fullstack-developer": {
    label: ".NET Full Stack Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["C#", "JavaScript", "TypeScript"],
      frameworks: [
        ".NET Core",
        "ASP.NET Core",
        "React",
        "Angular",
        "Entity Framework",
        "Blazor",
      ],
      databases: ["SQL Server", "PostgreSQL", "Azure SQL"],
      tools: ["Visual Studio", "Git", "Azure", "Docker", "npm"],
      concepts: [
        "REST API",
        "LINQ",
        "Dependency Injection",
        "State Management",
        "Authentication",
        "Microservices",
      ],
    },
    weights: {
      technical: 0.35,
      experience: 0.35,
      projects: 0.2,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "built full-stack",
      "implemented",
      "integrated .NET",
      "deployed",
    ],
    minExperience: 0,
  },
  "devops-engineer": {
    label: "DevOps Engineer",
    category: "Engineering",
    requiredSkills: {
      programming: ["Python", "Bash", "Go", "PowerShell"],
      frameworks: ["Terraform", "Ansible", "CloudFormation"],
      databases: ["MySQL", "PostgreSQL", "MongoDB"],
      tools: [
        "Docker",
        "Kubernetes",
        "Jenkins",
        "GitLab CI",
        "AWS",
        "Azure",
        "GCP",
        "Prometheus",
        "Grafana",
      ],
      concepts: [
        "CI/CD",
        "Infrastructure as Code",
        "Monitoring",
        "Container Orchestration",
        "Cloud Architecture",
      ],
    },
    weights: {
      technical: 0.45,
      experience: 0.3,
      projects: 0.15,
      education: 0.1,
    },
    experienceKeywords: [
      "automated",
      "deployed",
      "configured",
      "managed infrastructure",
      "optimized pipelines",
      "scaled",
    ],
    minExperience: 1,
  },
  "data-scientist": {
    label: "Data Scientist",
    category: "Data & Analytics",
    requiredSkills: {
      programming: ["Python", "R", "SQL"],
      frameworks: [
        "TensorFlow",
        "PyTorch",
        "Scikit-learn",
        "Pandas",
        "NumPy",
        "Keras",
      ],
      databases: ["PostgreSQL", "MongoDB", "Snowflake", "BigQuery"],
      tools: ["Jupyter", "Git", "Docker", "AWS", "Azure ML", "Tableau"],
      concepts: [
        "Machine Learning",
        "Deep Learning",
        "Statistics",
        "Data Visualization",
        "A/B Testing",
        "Model Deployment",
      ],
    },
    weights: {
      technical: 0.4,
      experience: 0.25,
      projects: 0.2,
      education: 0.15,
    },
    experienceKeywords: [
      "analyzed",
      "modeled",
      "predicted",
      "trained",
      "optimized models",
      "improved accuracy",
    ],
    minExperience: 0,
  },
  "machine-learning-engineer": {
    label: "Machine Learning Engineer",
    category: "Data & Analytics",
    requiredSkills: {
      programming: ["Python", "C++", "Java"],
      frameworks: [
        "TensorFlow",
        "PyTorch",
        "Scikit-learn",
        "MLflow",
        "Kubeflow",
      ],
      databases: ["PostgreSQL", "MongoDB", "Redis"],
      tools: ["Docker", "Kubernetes", "AWS SageMaker", "Azure ML", "Git"],
      concepts: [
        "ML Ops",
        "Model Deployment",
        "Deep Learning",
        "Computer Vision",
        "NLP",
        "Feature Engineering",
      ],
    },
    weights: {
      technical: 0.4,
      experience: 0.3,
      projects: 0.2,
      education: 0.1,
    },
    experienceKeywords: [
      "deployed",
      "trained",
      "optimized",
      "built models",
      "improved performance",
      "scaled ML systems",
    ],
    minExperience: 1,
  },
  "mobile-developer": {
    label: "Mobile Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["Swift", "Kotlin", "JavaScript", "Dart"],
      frameworks: ["React Native", "Flutter", "SwiftUI", "Jetpack Compose"],
      databases: ["SQLite", "Realm", "Firebase"],
      tools: ["Xcode", "Android Studio", "Git", "Fastlane", "TestFlight"],
      concepts: [
        "Mobile UI/UX",
        "App Store Optimization",
        "Push Notifications",
        "Offline Storage",
        "Performance",
      ],
    },
    weights: {
      technical: 0.4,
      experience: 0.3,
      projects: 0.2,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "published",
      "built",
      "optimized",
      "implemented features",
      "shipped apps",
    ],
    minExperience: 0,
  },
  "react-native-developer": {
    label: "React Native Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["JavaScript", "TypeScript"],
      frameworks: [
        "React Native",
        "Redux",
        "React Navigation",
        "Expo",
        "Native Base",
      ],
      databases: ["Firebase", "Realm", "AsyncStorage"],
      tools: ["Git", "Xcode", "Android Studio", "npm", "Metro"],
      concepts: [
        "Cross-Platform Development",
        "Native Modules",
        "Push Notifications",
        "State Management",
        "Performance",
      ],
    },
    weights: {
      technical: 0.4,
      experience: 0.3,
      projects: 0.2,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "built",
      "published",
      "optimized",
      "integrated",
      "deployed apps",
    ],
    minExperience: 0,
  },
  "flutter-developer": {
    label: "Flutter Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["Dart"],
      frameworks: ["Flutter", "Provider", "Bloc", "Riverpod", "GetX"],
      databases: ["Firebase", "SQLite", "Hive"],
      tools: ["Android Studio", "VS Code", "Git", "Firebase Console"],
      concepts: [
        "Widget Tree",
        "State Management",
        "Material Design",
        "Cupertino",
        "Animations",
        "Platform Channels",
      ],
    },
    weights: {
      technical: 0.4,
      experience: 0.3,
      projects: 0.2,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "built",
      "published",
      "optimized Flutter",
      "implemented",
      "shipped",
    ],
    minExperience: 0,
  },
  "ios-developer": {
    label: "iOS Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["Swift", "Objective-C"],
      frameworks: ["SwiftUI", "UIKit", "Combine", "CoreData", "AVFoundation"],
      databases: ["CoreData", "Realm", "Firebase"],
      tools: [
        "Xcode",
        "Git",
        "CocoaPods",
        "Swift Package Manager",
        "TestFlight",
      ],
      concepts: [
        "MVC",
        "MVVM",
        "Auto Layout",
        "Delegation",
        "Memory Management",
        "App Store Guidelines",
      ],
    },
    weights: {
      technical: 0.4,
      experience: 0.3,
      projects: 0.2,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "published",
      "built iOS",
      "implemented",
      "optimized",
      "shipped",
    ],
    minExperience: 0,
  },
  "android-developer": {
    label: "Android Developer",
    category: "Engineering",
    requiredSkills: {
      programming: ["Kotlin", "Java"],
      frameworks: [
        "Jetpack Compose",
        "Android SDK",
        "Retrofit",
        "Room",
        "Dagger/Hilt",
      ],
      databases: ["Room", "SQLite", "Firebase"],
      tools: ["Android Studio", "Git", "Gradle", "ADB", "Firebase"],
      concepts: [
        "MVVM",
        "Material Design",
        "Lifecycle",
        "Coroutines",
        "Navigation",
        "Play Store Guidelines",
      ],
    },
    weights: {
      technical: 0.4,
      experience: 0.3,
      projects: 0.2,
      education: 0.1,
    },
    experienceKeywords: [
      "developed",
      "published",
      "built Android",
      "implemented",
      "optimized",
      "shipped",
    ],
    minExperience: 0,
  },
  "product-manager": {
    label: "Product Manager",
    category: "Product & Business",
    requiredSkills: {
      programming: ["SQL", "Python"],
      frameworks: [],
      databases: [],
      tools: [
        "Jira",
        "Figma",
        "Google Analytics",
        "Mixpanel",
        "Amplitude",
        "Tableau",
      ],
      concepts: [
        "Product Strategy",
        "Roadmap Planning",
        "User Research",
        "A/B Testing",
        "Agile",
        "Data Analysis",
      ],
    },
    weights: {
      technical: 0.15,
      experience: 0.45,
      projects: 0.25,
      education: 0.15,
    },
    experienceKeywords: [
      "led",
      "launched",
      "defined strategy",
      "prioritized",
      "collaborated",
      "increased metrics",
    ],
    minExperience: 2,
  },
  "ui-ux-designer": {
    label: "UI/UX Designer",
    category: "Design",
    requiredSkills: {
      programming: ["HTML", "CSS", "JavaScript"],
      frameworks: [],
      databases: [],
      tools: [
        "Figma",
        "Sketch",
        "Adobe XD",
        "Photoshop",
        "Illustrator",
        "InVision",
        "Framer",
      ],
      concepts: [
        "User Research",
        "Wireframing",
        "Prototyping",
        "Design Systems",
        "Accessibility",
        "Usability Testing",
      ],
    },
    weights: {
      technical: 0.2,
      experience: 0.3,
      projects: 0.35,
      education: 0.15,
    },
    experienceKeywords: [
      "designed",
      "created",
      "prototyped",
      "conducted research",
      "improved UX",
      "collaborated",
    ],
    minExperience: 0,
  },
  "cloud-architect": {
    label: "Cloud Architect",
    category: "Engineering",
    requiredSkills: {
      programming: ["Python", "Go", "Bash"],
      frameworks: ["Terraform", "CloudFormation", "Serverless"],
      databases: ["DynamoDB", "RDS", "CosmosDB"],
      tools: ["AWS", "Azure", "GCP", "Kubernetes", "Docker", "Jenkins"],
      concepts: [
        "Cloud Architecture",
        "Scalability",
        "High Availability",
        "Security",
        "Cost Optimization",
        "Multi-cloud",
      ],
    },
    weights: {
      technical: 0.4,
      experience: 0.35,
      projects: 0.15,
      education: 0.1,
    },
    experienceKeywords: [
      "architected",
      "designed",
      "migrated",
      "optimized",
      "scaled cloud infrastructure",
      "reduced costs",
    ],
    minExperience: 3,
  },
  "security-engineer": {
    label: "Security Engineer",
    category: "Security",
    requiredSkills: {
      programming: ["Python", "C", "C++", "JavaScript"],
      frameworks: [],
      databases: ["PostgreSQL", "MySQL"],
      tools: ["Burp Suite", "Metasploit", "Wireshark", "Nessus", "SIEM", "WAF"],
      concepts: [
        "Penetration Testing",
        "Vulnerability Assessment",
        "Network Security",
        "Encryption",
        "Compliance",
        "Incident Response",
      ],
    },
    weights: {
      technical: 0.4,
      experience: 0.35,
      projects: 0.15,
      education: 0.1,
    },
    experienceKeywords: [
      "secured",
      "identified vulnerabilities",
      "implemented security",
      "conducted audits",
      "mitigated risks",
    ],
    minExperience: 1,
  },
};

// Get all job categories
export const getJobCategories = () => {
  const categories = new Set();
  Object.values(JOB_PROFILES).forEach((profile) => {
    categories.add(profile.category);
  });
  return Array.from(categories).sort();
};

// Get jobs by category
export const getJobsByCategory = (category) => {
  return Object.entries(JOB_PROFILES)
    .filter(([_, profile]) => profile.category === category)
    .map(([key, profile]) => ({key, ...profile}));
};

// Get all jobs
export const getAllJobs = () => {
  return Object.entries(JOB_PROFILES).map(([key, profile]) => ({
    key,
    ...profile,
  }));
};

// Get job profile by key
export const getJobProfile = (jobKey) => {
  return JOB_PROFILES[jobKey];
};
